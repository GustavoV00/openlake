apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  # The name will be dynamically set by Airflow, e.g., "sales-report-20250611"
  name: "sales-report-{{ ds_nodash }}"
  namespace: {{ params.spark_job_namespace }}
spec:
  type: Python
  mode: cluster
  image: "{{ params.spark_image }}" # Use a parameter for the image
  imagePullPolicy: Always
  mainApplicationFile: "{{ params.main_application_file }}"
  sparkVersion: "3.5.1"
  
  sparkConf:
    # --- We removed the hardcoded access/secret keys from here ---
    # The S3A connector will automatically use the AWS_... environment variables
    "spark.hadoop.fs.s3a.endpoint": "{{ params.minio_endpoint_url }}"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
    "spark.sql.adaptive.enabled": "true"
    "spark.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension"
    "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog"

  driver:
    labels:
      version: 3.5.1
    cores: 1
    memory: 2g
    serviceAccount: spark-operator-spark # Using the service account you specified
    # --- This is the SECURE way to inject credentials ---
    envFrom:
      - secretRef:
          # This references the Kubernetes secret holding your MinIO credentials
          name: minio-s3-creds
    # Your full security context is preserved
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsGroup: 185
      runAsUser: 185
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
  
  executor:
    labels:
      version: 3.5.1
    instances: 2
    cores: 1
    memory: 2g
    # --- Injecting credentials into executors as well ---
    envFrom:
      - secretRef:
          name: minio-s3-creds
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsGroup: 185
      runAsUser: 185
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault